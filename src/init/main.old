#include <stdio.h>

/* Scheduler include files. */
#include <kernel/os/FreeRTOS.h>
#include <kernel/os/task.h>

#include <kernel/hal/mouse/mouse.h> // mouse
#include <kernel/hal/kbd/kbd.h>     // keyboard
#include <kernel/hal/fb/fb.h>       // framebuffer

#include <fs/fs.h>                  // filesystem

#include <lib/gfx/bitmap.h>

extern GFX_Bitmap piratos_logo;

static void
AnimationTask(void *parameters) {
	FB_Color c, bg = { 0x50, 0x20, 0xa0, 0xff };
	FB_Surface *logo;
	FB_Rectangle upd;
	int dir, pos;

	fb_fill(NULL, NULL, &bg);
	fb_flip(NULL);

	logo = gfx_bitmap_load(&piratos_logo);

	pos = (1280 - piratos_logo.width) / 2;
	upd.y = 768 - piratos_logo.height;
	upd.w = piratos_logo.width;
	upd.h = piratos_logo.height;
	dir = 2;

	while (1) {
		upd.x = pos;
		pos += dir;

		fb_fill(NULL, &upd, &bg);
		fb_blit(logo, NULL, NULL, &upd, NULL);
		fb_flip(&upd);

		vTaskDelay(40); // ~25fps

		if ((pos >= 1280 - upd.w) || (pos <= 0)) dir *= -1;
	}
}

static void
EventTask(void *parameters) {
	MOUSE_Event mouse_ev;
	KBD_Event kbd_ev;

	kbd_init();
	mouse_init();

	while (1) {
		if (mouse_poll(&mouse_ev)) {
			printf("mouse poll: %i, %i, %i, %i\n",
				mouse_ev.x, mouse_ev.y, mouse_ev.state, mouse_ev.button);
		}

		if (kbd_poll(&kbd_ev)) {
			printf("kbd poll: %i, %i\n", kbd_ev.state, kbd_ev.symbol);
		}

		vTaskDelay(10);
	}
}

static void
ShellTask(void *parameters) {
	fs_init();
	//shell_init();
}

void
piratos(void) {
	portTickType rate = 500;

	printf("pir{A}tos Version " VERSION " (" PLATFORM ")\n");

	fb_init();
	fb_mode(FB_MODE_1280x768, FB_FORMAT_BEST);

	xTaskCreate(AnimationTask, "LOGOx",  configMINIMAL_STACK_SIZE, NULL, 7, NULL);
	xTaskCreate(EventTask,     "EVENTx", configMINIMAL_STACK_SIZE, NULL, 8, NULL);
	//xTaskCreate(ShellTask,     "SHELLx", configMINIMAL_STACK_SIZE, NULL, 9, NULL);

	vTaskStartScheduler();

	//shell_fini();
	fs_fini();
	mouse_fini();
	kbd_fini();
	fb_fini();
}
